package com.yst.ovls.dao;

import com.yst.ovls.entity.CollectCourse;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface CollectCourseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collect_course
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @Delete({
        "delete from collect_course",
        "where Id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collect_course
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @Insert({
        "insert into collect_course (Id, user_id, ",
        "course_id, collect_time)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{courseId,jdbcType=INTEGER}, #{collectTime,jdbcType=TIMESTAMP})"
    })
    int insert(CollectCourse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collect_course
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @InsertProvider(type=CollectCourseSqlProvider.class, method="insertSelective")
    int insertSelective(CollectCourse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collect_course
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @Select({
        "select",
        "Id, user_id, course_id, collect_time",
        "from collect_course",
        "where Id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="Id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="course_id", property="courseId", jdbcType=JdbcType.INTEGER),
        @Result(column="collect_time", property="collectTime", jdbcType=JdbcType.TIMESTAMP)
    })
    CollectCourse selectByPrimaryKey(Integer id);

    /*
    * @Description：
    * @Author： yanshitong
    * @Date： 2019/3/19 23:21
    * @Param：[userId, courseId]
    * @Return： java.util.List<com.yst.ovls.entity.CollectCourse>
    * @Exception： 根据用户id 和 课程ID 查询数据库中数据
    */
    @Select({
            "select",
            "Id, user_id, course_id, collect_time",
            "from collect_course",
            "where user_id = #{userId,jdbcType=INTEGER} and course_id = #{courseId,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="Id", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
            @Result(column="course_id", property="courseId", jdbcType=JdbcType.INTEGER),
            @Result(column="collect_time", property="collectTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<CollectCourse> selectByUserIdAndCourseId(Integer userId,Integer courseId);


    /*
    * @Description：
    * @Author： yanshitong
    * @Date： 2019/3/19 23:28
    * @Param：[userId]
    * @Return： java.util.List<com.yst.ovls.entity.CollectCourse>
    * @Exception： 根据用户id 查询数据库中 所有收藏的课程
    */
    @Select({
            "select",
            "Id, user_id, course_id, collect_time",
            "from collect_course",
            "where user_id = #{userId,jdbcType=INTEGER} ORDER BY collect_time DESC"
    })
    @Results({
            @Result(column="Id", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
            @Result(column="course_id", property="courseId", jdbcType=JdbcType.INTEGER),
            @Result(column="collect_time", property="collectTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<CollectCourse> selectByUserId(Integer userId);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collect_course
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @UpdateProvider(type=CollectCourseSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CollectCourse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table collect_course
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @Update({
        "update collect_course",
        "set user_id = #{userId,jdbcType=INTEGER},",
          "course_id = #{courseId,jdbcType=INTEGER},",
          "collect_time = #{collectTime,jdbcType=TIMESTAMP}",
        "where Id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CollectCourse record);
}