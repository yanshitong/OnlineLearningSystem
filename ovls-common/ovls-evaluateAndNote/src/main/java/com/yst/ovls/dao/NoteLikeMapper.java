package com.yst.ovls.dao;

import com.yst.ovls.entity.NoteLike;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface NoteLikeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note_like
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @Delete({
        "delete from note_like",
        "where Id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /** 根据用户id和评价id删除点赞记录*/
    @Delete({
            "delete from note_like",
            "where note_id = #{noteId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}"
    })
    int deleteByNoteIdAndUserId(@Param("noteId") Integer noteId,@Param("userId") Integer userId);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note_like
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @Insert({
        "insert into note_like (Id, user_id, ",
        "note_id, like_time)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{noteId,jdbcType=INTEGER}, #{likeTime,jdbcType=TIMESTAMP})"
    })
    int insert(NoteLike record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note_like
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @InsertProvider(type=NoteLikeSqlProvider.class, method="insertSelective")
    int insertSelective(NoteLike record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note_like
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @Select({
        "select",
        "Id, user_id, note_id, like_time",
        "from note_like",
        "where Id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="Id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="note_id", property="noteId", jdbcType=JdbcType.INTEGER),
        @Result(column="like_time", property="likeTime", jdbcType=JdbcType.TIMESTAMP)
    })
    NoteLike selectByPrimaryKey(Integer id);

//根据用户id 和 笔记id 获取点赞信息
    @Select({
            "select",
            "Id, user_id, note_id, like_time",
            "from note_like",
            "where user_id= #{userId,jdbcType=INTEGER} and note_id = #{noteId,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="Id", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
            @Result(column="note_id", property="noteId", jdbcType=JdbcType.INTEGER),
            @Result(column="like_time", property="likeTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<NoteLike> selectByUserIdAndNoteId(@Param("userId") Integer userId, @Param("noteId") Integer noteId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note_like
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @UpdateProvider(type=NoteLikeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(NoteLike record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table note_like
     *
     * @mbg.generated Mon Jan 07 11:58:20 CST 2019
     */
    @Update({
        "update note_like",
        "set user_id = #{userId,jdbcType=INTEGER},",
          "note_id = #{noteId,jdbcType=INTEGER},",
          "like_time = #{likeTime,jdbcType=TIMESTAMP}",
        "where Id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(NoteLike record);
}